openapi: 3.0.0
info:
  title: Vipps Point of sale API
  version: 1.0.0
  description: Api to trigger a check-in in the Vipps app
  contact:
    name: Team Payment Experience
    url: 'https://vipps.no/kontakt-oss/bedrift/vipps/'
servers:
  - url: 'https://api.vipps.no/point-of-sale'
    description: Vipps Point-of-sale api
paths:
  /v1/loyalty-check-in:
    parameters: []
    post:
      summary: Initiate a loyalty check in session for a Vipps user
      operationId: initiateLoyaltyCheckIn
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyCheckInResponse'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          description: Unauthorized
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoyaltyCheckInRequest'
        description: ''
      description: Endpoint for triggering a Vipps loyalty check-in
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Ocp-Apim-Subscription-Key'
        - $ref: '#/components/parameters/Merchant-Serial-Number'
      tags:
        - point-of-sale
components:
  schemas:
    LoyaltyCheckInRequest:
      title: LoyaltyCheckInRequest
      type: object
      description: ''
      properties:
        msisdn:
          type: string
          example: '4790909090'
          description: MSISDN for the user
          pattern: '^47[0-9]{8}$'
          nullable: true
        LoyaltyProgramName:
          type: string
          minLength: 1
          description: The name of the customer loyalty program
          nullable: true
        IsMember:
          type: boolean
          description: Is the customer member of the loyalty program?
          nullable: true
      required:
        - msisdn
        - LoyaltyProgramName
        - IsMember
    LoyaltyCheckInResponse:
      title: LoyaltyCheckInResponse
      type: string
      x-examples: {}
      description: ''
      properties:
        id:
          type: string
          example: '4790909090'
    ErrorResponse:
      type: object
      x-examples:
        example-1:
          type: 'https://datatracker.ietf.org/doc/html/rfc7231#section-6.5.1'
          title: One or more validation errors occurred.
          detail: BadRequest
          instance: 00-616e415f5af7584eb4d9369d0fe8d7cc-48b90041faff204c-00
          invalidParams:
            - name: MSISDN
              reason: 'The field MSISDN must match the regular expression ''^https://[\w\.]+([\w#!:.?+=&%@\-/]+)?$''.'
      properties:
        type:
          type: string
          minLength: 1
        title:
          type: string
          minLength: 1
        detail:
          type: string
          minLength: 1
        instance:
          type: string
          minLength: 1
        invalidParams:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                minLength: 1
              reason:
                type: string
                minLength: 1
            required:
              - name
              - reason
      required:
        - title
        - detail
        - instance
  securitySchemes:
    BearerToken:
      type: http
      scheme: bearer
  parameters:
    Merchant-Serial-Number:
      name: Merchant-Serial-Number
      in: header
      required: false
      schema:
        type: string
      description: 'The merchant serial number (MSN) for the sale unit. Partners must always send the Merchant-Serial-Number header, and we recommend that everyone sends it, also when using the merchant''s own API keys. The Merchant-Serial-Number header can be used with all API keys, and can speed up any trouble-shooting of API problems quite a bit.'
    Ocp-Apim-Subscription-Key:
      name: Ocp-Apim-Subscription-Key
      in: header
      required: true
      schema:
        type: string
      description: Subscription Key
    Authorization:
      name: Authorization
      in: header
      required: true
      schema:
        type: string
      description: Bearer <access_token>
  responses:
    400BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
tags:
  - name: point-of-sale
security:
  - BearerToken: []
